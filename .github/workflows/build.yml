name: Build and Release with PyInstaller

on:
  push:
    tags:
      - 'v*'  # 触发发布版本时触发工作流
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [win64, amd64-linux, arm64-linux]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # 设置 Python 版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Install platform-specific dependencies (Linux ARM)
      if: matrix.platform == 'arm64-linux' || matrix.platform == 'amd64-linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc
        sudo apt-get install -y python3-dev

    - name: Install platform-specific dependencies (Windows)
      if: matrix.platform == 'win64'
      run: |
        choco install python

    - name: Build with PyInstaller
      run: |
        if [ "${{ matrix.platform }}" == "win64" ]; then
          pyinstaller --onefile --distpath ./dist/win64 main.py
        elif [ "${{ matrix.platform }}" == "amd64-linux" ]; then
          pyinstaller --onefile --distpath ./dist/amd64-linux main.py
        elif [ "${{ matrix.platform }}" == "arm64-linux" ]; then
          pyinstaller --onefile --distpath ./dist/arm64-linux main.py
        fi

    - name: Upload built files as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: ./dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./dist/*  # 上传所有编译后的文件
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
