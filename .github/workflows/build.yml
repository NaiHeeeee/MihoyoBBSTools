name: Build Python Package for Multiple Platforms and Publish Release

on:
  push:
    tags:
      - 'v*'  # 仅当你推送版本标签时触发

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x86_64, arm64]  # linux 支持 x86_64 和 arm64 架构
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executable
      run: |
        if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
          # For Linux, use PyInstaller to build the executable
          if [[ ${{ matrix.arch }} == 'x86_64' ]]; then
            pyinstaller --onefile main.py  # For 64-bit Linux
          elif [[ ${{ matrix.arch }} == 'arm64' ]]; then
            pyinstaller --onefile --distpath dist-arm64 main.py  # ARM64 Linux
          fi
        elif [[ ${{ matrix.os }} == 'windows-latest' ]]; then
          # For Windows, use PyInstaller for both 32-bit and 64-bit
          if [[ ${{ matrix.arch }} == 'x86_64' ]]; then
            pyinstaller --onefile --distpath dist-win64 main.py
          elif [[ ${{ matrix.arch }} == 'arm64' ]]; then
            pyinstaller --onefile --distpath dist-win-arm64 main.py
          fi
        fi

    - name: Upload built executables as release assets
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist-win64/*
          dist-arm64/*
          dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: 'Automatically created release from GitHub Actions'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist-win64/your_script.exe
        asset_name: your_script-win64.exe
        asset_content_type: application/octet-stream

    - name: Upload release assets (Linux 64-bit)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist/your_script
        asset_name: your_script-linux-x86_64
        asset_content_type: application/octet-stream

    - name: Upload release assets (ARM64 Linux)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist-arm64/your_script
        asset_name: your_script-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload release assets (Windows ARM64)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist-win-arm64/your_script.exe
        asset_name: your_script-win-arm64.exe
        asset_content_type: application/octet-stream
